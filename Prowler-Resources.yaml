AWSTemplateFormatVersion: "2010-09-09"
Description: >
  Deploys an EC2 Instance, S3 bucket, and IAM Cross-Account trusted Role for use with Prowler. 
  Userdata has a bash script embedded which will be used for multi-account scanning. 
  Note that $ and ` in Userdata are escaped with \ if they are not supposed to be interpreted by CloudFormation

Metadata:
  AWS::CloudFormation::Interface:
    ParameterGroups:
      - Label:
          default: "Network Configuration"
        Parameters:
          - VpcId
          - SubnetId
      - Label:
          default: "EC2 Configuration"
        Parameters:
          - InstanceType
          - InstanceImageId
          - KeyPairName
          - PermittedSSHInbound
      - Label:
          default: "S3 Configuration"
        Parameters:
          - BucketName
          - EmailAddress          
      - Label:
          default: "IAM Configuration"
        Parameters:
          - IAMProwlerEC2Role
          - IAMProwlerExecRole
      - Label:
          default: "Prowler Script"
        Parameters:
          - Parallelism

Parameters:
  VpcId:
    Type: AWS::EC2::VPC::Id
    Description: Select a VPC
  SubnetId:
    Type: AWS::EC2::Subnet::Id
    Description: Select a private subnet with Internet access. (Userdata is dependent on Internet for downloading binaries during EC2 provisioning)
  InstanceImageId:
    Type: "AWS::SSM::Parameter::Value<AWS::EC2::Image::Id>"
    Description: Amazon Linux 2 Image
    Default: "/aws/service/ami-amazon-linux-latest/amzn2-ami-hvm-x86_64-gp2"
  InstanceType:
    Type: String
    Default: r6i.xlarge
    AllowedValues:
      - r6i.large
      - r6i.xlarge
      - r6i.2xlarge
      - r5.large
      - r5.xlarge
      - r5.2xlarge
    Description: "Specify the instance size to use. Parallel_Account Sizing: AWS: 10=r6i.large, 12=r6i.xlarge, 14=r6i.2xlarge / AWS-CN: Use r5 equivalent"
  BucketName:
    Type: String
    Description: Specify the Bucket Name for the Prowler output (Account ID and Region will be appended)
    Default: prowler-output
  EmailAddress:
    Type: String
    Description: "Optional: If you wish to receive a notification when Prowler is completed and has uploaded the zip file containing findings, enter an email address and accept the topic subscription before Prowler completes the assessment"
  IAMProwlerEC2Role:
    Type: "String"
    Description: "Name of IAM Role to be created for use with the Prowler EC2 Instance. This role's ARN is used with the ProwlerExecRole CFN template"
    Default: "ProwlerEC2Role"
  IAMProwlerExecRole:
    Type: "String"
    Description: "Name of IAM Role to be assumed in the member accounts. This name must match the IAM Role deployed via the ProwlerExecRole CFN template"
    Default: "ProwlerExecRole"
  Parallelism:
    Type: String
    Description: "Specify the number of accounts to assess in parallel. Appropriate Instance Type and Size must be selected (can be adjusted within prowler_scan.sh)"
    Default: 12
    AllowedValues:
      - 10
      - 12
      - 14
  KeyPairName:
    Type: "String"
    Description: "Optional: Specify the name of a pre-existing EC2 KeyPair if you require ssh to the Prowler instance.  Recommendation is to leave blank and use SSM Connect"
  PermittedSSHInbound:
    Type: "String"
    Description: "Optional: If allowing inbound SSH, specify the permitted CIDR else leave the default 127.0.0.1"
    Default: "127.0.0.1/32"

Mappings: 
  PartitionMap: 
    aws:
      ec2service: ec2.amazonaws.com
    aws-us-gov:
      ec2service: ec2.amazonaws.com
    aws-cn:
      ec2service: ec2.amazonaws.com.cn

Conditions:
  KeyProvided:
    Fn::Not:
      - Fn::Equals:
          - ""
          - Ref: KeyPairName

  EmailProvided:
    Fn::Not:
      - Fn::Equals:
          - ""
          - Ref: EmailAddress

Resources:
  ProwlerEC2RolePolicy:
    Type: "AWS::IAM::ManagedPolicy"
    Metadata:
      cfn_nag:
        rules_to_suppress:
          - id: W13
            reason: "The resource must remain as * in order to assess all IAM Users."
          - id: W28
            reason: "The IAM Role name is specified as an explicit for use within the scripting"
    Properties:
      Description: !Sub "This policy grants necessary permissions to assume ${IAMProwlerExecRole} in AWS accounts"
      ManagedPolicyName: !Sub "${IAMProwlerEC2Role}Policy"
      PolicyDocument:
        Version: "2012-10-17"
        Statement: #Actions below are given against all resources as per Prowler requirements to grant the appropriate level of read-only access to resources
          - Effect: Allow
            Action:
              - sts:AssumeRole
            Resource: !Sub "arn:${AWS::Partition}:iam::*:role/${IAMProwlerExecRole}"
          - Effect: Allow
            Action:
              - account:Get*
              - appstream:Describe*
              - codeartifact:ListRepositories
              - codebuild:BatchGetBuilds
              - ds:Get*
              - ds:Describe*
              - ds:List*
              - ec2:GetEbsEncryptionByDefault
              - ecr:Describe*
              - elasticfilesystem:DescribeBackupPolicy
              - glue:GetConnections
              - glue:GetSecurityConfiguration
              - glue:SearchTables
              - lambda:GetFunction
              - macie2:GetMacieSession
              - s3:GetAccountPublicAccessBlock
              - s3:GetEncryptionConfiguration
              - s3:GetPublicAccessBlock
              - shield:DescribeProtection
              - shield:GetSubscriptionState
              - ssm:GetDocument
              - support:Describe*
              - tag:GetTagKeys
            Resource: "*"
          - Effect: Allow
            Action:
              - apigateway:GET
            Resource:
              - !Sub "arn:${AWS::Partition}:apigateway:*::/restapis/*"
          - Effect: Allow
            Action:
              - "s3:PutObject*"
            Resource: !Sub "arn:${AWS::Partition}:s3:::${S3Bucket}"
      Roles:
        - Ref: "ProwlerEC2Role"

  ProwlerEC2Role:
    Type: "AWS::IAM::Role"
    Metadata:
      cfn_nag:
        rules_to_suppress:
          - id: W28
            reason: "The IAM Role name is specified as an explicit for use within the scripting"
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: "Allow"
            Principal:
              Service:
                - !FindInMap [PartitionMap, !Ref "AWS::Partition", ec2service]
            Action:
              - "sts:AssumeRole"
      Description: "This role grants necessary permissions for the Prowler EC2 instance to assume roles in accounts"
      MaxSessionDuration: 43200
      ManagedPolicyArns: #SecurityAudit and ViewOnly Access are used as per Prowler requirements to grant the appropriate level of read-only access to resources
        - !Sub "arn:${AWS::Partition}:iam::aws:policy/AmazonSSMManagedInstanceCore"
        - !Sub "arn:${AWS::Partition}:iam::aws:policy/SecurityAudit"
        - !Sub "arn:${AWS::Partition}:iam::aws:policy/job-function/ViewOnlyAccess"
      Path: "/"
      RoleName: !Sub "${IAMProwlerEC2Role}"

  RootInstanceProfile:
    Type: "AWS::IAM::InstanceProfile"
    Metadata:
      cfn_nag:
        rules_to_suppress:
          - id: W28
            reason: "The IAM Role name is specified as an explicit for use within the scripting"
    Properties:
      InstanceProfileName: !Sub "${IAMProwlerEC2Role}"
      Path: "/"
      Roles:
        - Ref: "ProwlerEC2Role"

  ProwlerSNSTopic:
    Condition: EmailProvided
    Type: AWS::SNS::Topic
    Metadata:
      cfn_nag:
        rules_to_suppress:
          - id: W47
            reason: "The SNS Topic is used to send a notification when the Prowler Assessment is completed and an object is uploaded to S3"
    Properties:
      TopicName: ProwlerNotifications

  ProwlerSNSSubscription:
    Condition: EmailProvided
    Type: AWS::SNS::Subscription
    Properties:
      Protocol: email
      Endpoint: !Ref EmailAddress
      TopicArn: !Ref ProwlerSNSTopic
      
  ProwlerSNSTopicPolicy:
    Condition: EmailProvided
    Type: AWS::SNS::TopicPolicy
    Properties:
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service: events.amazonaws.com
            Action:
              - sns:Publish
            Resource:
              Ref: ProwlerSNSTopic
            Condition:
              StringEquals:
                aws:SourceAccount: !Sub "${AWS::AccountId}"
      Topics:
        - !Ref ProwlerSNSTopic

  S3EventRule:
    Condition: EmailProvided
    Type: "AWS::Events::Rule"
    Properties:
      Description: Prowler S3 Bucket Event
      Name: ProwlerS3BucketEvent
      EventPattern:
        source:
          - aws.s3
        detail-type:
          - Object Created
        detail:
          bucket:
            name:
            - !Ref S3Bucket
      State: ENABLED
      Targets:
        - Arn: !Ref ProwlerSNSTopic
          Id: ProwlerSNSTopic
          InputTransformer:
            InputPathsMap:
              "s3bucket": "$.detail.bucket.name"
              "s3objectkey": "$.detail.object.key"
            InputTemplate: |
              "Prowler asessment has completed and the report has been uploaded to the S3 Bucket."
              "Please download and process the findings"
              "S3 Bucket Name: <s3bucket>"
              "S3 Object Key: <s3objectkey>"
          RetryPolicy:
            MaximumRetryAttempts: 4
            MaximumEventAgeInSeconds: 400

  ProwlerSG:
    Type: "AWS::EC2::SecurityGroup"
    Metadata:
      cfn_nag:
        rules_to_suppress:
          - id: W28
            reason: "The Security Group name is specified explicitly."
          - id: W5
            reason: "The Security Group has egress rules with cidr open to world to download packages from repos."
    Properties:
      GroupDescription: "Security Group which allows outbound Internet and SSM access"
      VpcId: !Ref VpcId
      SecurityGroupEgress:
        - Description: "Download packages from Internet, SSM Connect, and write to S3"
          IpProtocol: "tcp"
          FromPort: "443"
          ToPort: "443"
          CidrIp: 0.0.0.0/0
        - Description: "DNS resolution"
          IpProtocol: "udp"
          FromPort: "53"
          ToPort: "53"
          CidrIp: 0.0.0.0/0
      SecurityGroupIngress:
        - Description: "Inbound SSH"
          IpProtocol: "tcp"
          FromPort: "22"
          ToPort: "22"
          CidrIp: !Ref PermittedSSHInbound
      GroupName: "prowler-sg"
      Tags:
        - Key: "Name"
          Value: "prowler-sg"

  S3BucketPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket: !Ref S3Bucket
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              AWS: !GetAtt ProwlerEC2Role.Arn
            Action: "s3:PutObject"
            Resource: !Sub "arn:${AWS::Partition}:s3:::${S3Bucket}/*"
          - Sid: Deny non-HTTPS access
            Effect: Deny
            Principal: "*"
            Action: s3:*
            Resource:
              - !Sub "arn:${AWS::Partition}:s3:::${S3Bucket}"
              - !Sub "arn:${AWS::Partition}:s3:::${S3Bucket}/*"
            Condition:
              Bool:
                aws:SecureTransport: "false"

  S3Bucket:
    Type: "AWS::S3::Bucket"
    Metadata:
      cfn_nag:
        rules_to_suppress:
          - id: W35
            reason: "S3 access logging is not enable as the bucket is used once for finding download."
    Properties:
      BucketName: !Sub "${BucketName}-${AWS::AccountId}-${AWS::Region}"
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault:
              SSEAlgorithm: "AES256"
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        BlockPublicPolicy: true
        IgnorePublicAcls: true
        RestrictPublicBuckets: true
      OwnershipControls:
        Rules:
          - ObjectOwnership: BucketOwnerEnforced
      NotificationConfiguration:
        EventBridgeConfiguration:
          EventBridgeEnabled: true
      Tags:
        - Key: "Name"
          Value: !Sub "${BucketName}-${AWS::AccountId}-${AWS::Region}"

  LaunchTemplate:
    Type: "AWS::EC2::LaunchTemplate"
    Properties:
      LaunchTemplateData:
        MetadataOptions:
          HttpTokens: "required"

  Ec2Instance:
    Type: "AWS::EC2::Instance"
    Properties:
      ImageId:
        Ref: "InstanceImageId"
      InstanceType: !Ref InstanceType
      BlockDeviceMappings:
        - DeviceName: "/dev/xvda"
          Ebs:
            VolumeSize: "24"
            DeleteOnTermination: true
            VolumeType: "gp3"
            Encrypted: true
      SubnetId: !Ref SubnetId
      IamInstanceProfile: !Ref IAMProwlerEC2Role
      LaunchTemplate:
        LaunchTemplateId:
          Ref: "LaunchTemplate"
        Version: "1"
      Monitoring: true
      KeyName:
        Fn::If:
          - KeyProvided
          - Ref: KeyPairName
          - Ref: AWS::NoValue
      SecurityGroupIds:
        - !GetAtt "ProwlerSG.GroupId"
      UserData:
        Fn::Base64:
          Fn::Sub: |
            #!/bin/bash
            sudo yum upgrade -y

            #Create Linux swap of 16GB (128X64=8GB(BS=128 is optimial for creation))
            sudo dd if=/dev/zero of=/swapfile bs=128M count=64
            sudo chmod 600 /swapfile
            sudo mkswap /swapfile
            sudo swapon /swapfile
            echo "/swapfile swap swap defaults 0 0" >> /etc/fstab

            #Add /usr/local/bin to root path
            echo 'export PATH="/usr/local/bin:$PATH"' >> /root/.bashrc
            
            #Install script and Prowler dependencies
            sudo yum install -y jq git pip openssl-devel bzip2-devel libffi-devel gcc git

            cd /tmp
            wget https://www.python.org/ftp/python/3.9.16/Python-3.9.16.tgz
            tar zxf Python-3.9.16.tgz
            cd Python-3.9.16
            ./configure --enable-optimizations
            sudo make altinstall

            pip3 install detect-secrets==1.0.3
            ln -s /usr/local/bin/detect-secrets /bin/detect-secrets

            #Download a specific validated repo branch.  This will be updated for new releases once validated.
            cd /usr/local
            git clone -b 3.0.2 https://github.com/prowler-cloud/prowler
            cd prowler
            /usr/local/bin/python3.9 -m pip install --upgrade pip
            pip3.9 install pipenv
            pipenv install

            #Download the prowler_scan.sh script 
            wget -P /usr/local/prowler https://raw.githubusercontent.com/aws-samples/multi-account-security-assessment-via-prowler/prowler-3.x-dev/prowler_scan.sh

            chmod +x prowler_scan.sh

            #Replace default script variable values in /usr/local/prowler/prowler_scan.sh with parameters configured during CFT deploy
            #Note: This occurs ONCE during EC2 deployment and must be manually configured after deploy if additional tuning is required
            #       Multiple individual sed commands used for readability

            sed -i 's/PARALLELISM="10"/PARALLELISM="${Parallelism}"/' /usr/local/prowler/prowler_scan.sh
            sed -i 's/IAM_CROSS_ACCOUNT_ROLE="ProwlerExecRole"/IAM_CROSS_ACCOUNT_ROLE="${IAMProwlerExecRole}"/' /usr/local/prowler/prowler_scan.sh
            sed -i 's/S3_BUCKET="SetBucketName"/S3_BUCKET="${S3Bucket}"/' /usr/local/prowler/prowler_scan.sh

      Tags:
        - Key: "Name"
          Value: "prowlerec2"

Outputs:
  ProwlerEC2Role:
    Description: The ARN of the ProwlerEC2Role
    Value: !GetAtt ProwlerEC2Role.Arn
